<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Qcat.Qcat.user.repository.UserMapper">

    <resultMap type="com.Qcat.Qcat.market.dto.MenuDto" id="dtoBase">
        <id column="product_id" property="product_id"/>
        <result column="store_id" property="store_id"/>
        <result column="category" property="category"/>
        <result column="product_name" property="product_name"/>
        <result column="content" property="content"/>
        <result column="price" property="price"/>
        <result column="img" property="img"/>
        <result column="product_regdate" property="product_regdate"/>
    </resultMap>

    <select id="addLoginSession" parameterType="String" resultType="String">
        SELECT member_id FROM member WHERE login_id = #{login_id}
    </select>

    <select id="checkSignUp" resultType="Integer" parameterType="java.util.HashMap">
        SELECT count(#{type}) FROM member WHERE ${type} = #{value}
    </select>

    <insert id="insertSignUp" parameterType="com.Qcat.Qcat.user.dto.UserDto">
        INSERT INTO member(login_id,password, name, email, phone) VALUES(#{login_id},#{password},#{name},#{email},#{phone})
    </insert>

    <select id="checkLogin" resultType="Integer" parameterType="com.Qcat.Qcat.user.dto.UserDto">
        SELECT count(*) FROM member WHERE login_id = #{login_id} AND password = #{password};
    </select>

    <select id="getStoreList" parameterType="String" resultType="java.util.HashMap">
        SELECT s.store_id, s.member_id,s.store_name,s.market_tel, s.location, m.name FROM store s, member m WHERE s.member_id = m.member_id AND login_id= #{login_id};
    </select>

    <select id="getTotalPaging" resultMap="dtoBase">
        select * from product WHERE store_id = #{dto.store_id} ORDER BY category DESC LIMIT #{cri.amount} OFFSET #{cri.offset}
    </select>

    <select id="getCatTotalPaging" resultMap="dtoBase">
        select * from product WHERE store_id = #{dto.store_id} and category=#{dto.category} ORDER BY category DESC LIMIT #{cri.amount} OFFSET #{cri.offset}
    </select>

    <select id="getPageSize" parameterType="int" resultType="int">
        SELECT count(*) FROM product where store_id = #{store_id}
    </select>

    <select id="getCatPageSize" parameterType="java.util.HashMap" resultType="int">
        SELECT count(*) FROM product where store_id = #{store_id} AND category = #{cate}
    </select>

    <select id="getCategoryCount" parameterType="int" resultType="java.util.HashMap">
        SELECT * FROM product WHERE store_id= #{store_id} GROUP BY category;
    </select>

    <update id="updateProduct" parameterType="java.util.HashMap">
        UPDATE product SET ${type} = #{value} WHERE product_id = #{product_id}
    </update>

    <delete id="deleteMenu" parameterType="java.util.HashMap">
        DELETE FROM product WHERE product_id = #{product_id}
    </delete>

    <insert id="insertResume" parameterType="java.util.HashMap">
        INSERT INTO resume(memberId, title, storeName, tel, location, productsName, content) VALUES(#{member_id},#{title},#{storeName},#{tel},#{location},#{productsName},#{content})
    </insert>

    <select id="getResumeCount" resultType="int">
        SELECT count(*) FROM resume where memberId=#{member_id} and roles=0
    </select>
</mapper>